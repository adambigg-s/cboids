#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline:
        sokol-shdc -i ./src/shaders.glsl -o ./src/shaders.hpp --slang hlsl5:wgsl:glsl430

    Overview:
    =========
    Shader program: 'simple':
        Get shader desc: simple_shader_desc(sg_query_backend());
        Vertex Shader: simple_vs
        Fragment Shader: simple_fs
        Attributes:
            ATTR_simple_v_pos => 0
            ATTR_simple_v_color => 1
    Bindings:
        Uniform block 'v_params_boid':
            C struct: v_params_boid_t
            Bind slot: UB_v_params_boid => 0
        Uniform block 'v_params_world':
            C struct: v_params_world_t
            Bind slot: UB_v_params_world => 1
*/
#if !defined(SOKOL_GFX_INCLUDED)
#error "Please include sokol_gfx.h before shaders.hpp"
#endif
#if !defined(SOKOL_SHDC_ALIGN)
#if defined(_MSC_VER)
#define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
#else
#define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
#endif
#endif
#define ATTR_simple_v_pos (0)
#define ATTR_simple_v_color (1)
#define UB_v_params_boid (0)
#define UB_v_params_world (1)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct v_params_boid_t {
    float pos[2];
    float angle;
    float scale;
} v_params_boid_t;
#pragma pack(pop)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct v_params_world_t {
    float world_dims[2];
    uint8_t _pad_8[8];
} v_params_world_t;
#pragma pack(pop)
/*
    #version 430

    uniform vec4 v_params_boid[1];
    uniform vec4 v_params_world[1];
    layout(location = 0) out vec3 f_color;
    layout(location = 1) in vec3 v_color;
    layout(location = 1) out float f_angle;
    layout(location = 0) in vec2 v_pos;

    void main()
    {
        f_color = v_color;
        f_angle = v_params_boid[0].z;
        vec2 _32 = v_pos * v_params_boid[0].w;
        float _38 = _32.x;
        float _41 = cos(v_params_boid[0].z);
        float _45 = _32.y;
        float _48 = sin(v_params_boid[0].z);
        vec2 _75 = v_params_boid[0].xy + vec2(fma(_38, _41, -(_45 * _48)), fma(_38, _48, _45 * _41));
        vec2 world = _75;
        if (_75.x > v_params_world[0].x)
        {
            vec2 _169 = world;
            _169.x = _169.x - v_params_world[0].x;
            world = _169;
        }
        else
        {
            if (world.x < 0.0)
            {
                vec2 _173 = world;
                _173.x = _173.x + v_params_world[0].x;
                world = _173;
            }
        }
        if (world.y > v_params_world[0].y)
        {
            vec2 _177 = world;
            _177.y = _177.y - v_params_world[0].y;
            world = _177;
        }
        else
        {
            if (world.y < 0.0)
            {
                vec2 _181 = world;
                _181.y = _181.y + v_params_world[0].y;
                world = _181;
            }
        }
        gl_Position = vec4(fma(world.x / v_params_world[0].x, 2.0, -1.0), fma(world.y / v_params_world[0].y, 2.0, -1.0), 0.0, 1.0);
    }

*/
static const uint8_t simple_vs_source_glsl430[1369] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5f,0x62,0x6f,0x69,0x64,0x5b,0x31,0x5d,0x3b,0x0a,0x75,0x6e,0x69,
    0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x5b,0x31,0x5d,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,
    0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x66,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,
    0x20,0x76,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x6f,
    0x75,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x5f,0x61,0x6e,0x67,0x6c,0x65,
    0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x76,
    0x5f,0x70,0x6f,0x73,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,
    0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x3d,0x20,0x76,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x5f,0x61,0x6e,0x67,0x6c,0x65,0x20,0x3d,0x20,0x76,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5f,0x62,0x6f,0x69,0x64,0x5b,0x30,0x5d,0x2e,0x7a,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x33,0x32,0x20,0x3d,0x20,0x76,0x5f,0x70,
    0x6f,0x73,0x20,0x2a,0x20,0x76,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5f,0x62,0x6f,
    0x69,0x64,0x5b,0x30,0x5d,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x33,0x38,0x20,0x3d,0x20,0x5f,0x33,0x32,0x2e,0x78,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x31,0x20,0x3d,0x20,
    0x63,0x6f,0x73,0x28,0x76,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5f,0x62,0x6f,0x69,
    0x64,0x5b,0x30,0x5d,0x2e,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x34,0x35,0x20,0x3d,0x20,0x5f,0x33,0x32,0x2e,0x79,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x38,0x20,0x3d,0x20,
    0x73,0x69,0x6e,0x28,0x76,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5f,0x62,0x6f,0x69,
    0x64,0x5b,0x30,0x5d,0x2e,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,
    0x32,0x20,0x5f,0x37,0x35,0x20,0x3d,0x20,0x76,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5f,0x62,0x6f,0x69,0x64,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x20,0x2b,0x20,0x76,0x65,
    0x63,0x32,0x28,0x66,0x6d,0x61,0x28,0x5f,0x33,0x38,0x2c,0x20,0x5f,0x34,0x31,0x2c,
    0x20,0x2d,0x28,0x5f,0x34,0x35,0x20,0x2a,0x20,0x5f,0x34,0x38,0x29,0x29,0x2c,0x20,
    0x66,0x6d,0x61,0x28,0x5f,0x33,0x38,0x2c,0x20,0x5f,0x34,0x38,0x2c,0x20,0x5f,0x34,
    0x35,0x20,0x2a,0x20,0x5f,0x34,0x31,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x32,0x20,0x77,0x6f,0x72,0x6c,0x64,0x20,0x3d,0x20,0x5f,0x37,0x35,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x37,0x35,0x2e,0x78,0x20,0x3e,
    0x20,0x76,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x5b,
    0x30,0x5d,0x2e,0x78,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x31,0x36,0x39,0x20,0x3d,0x20,
    0x77,0x6f,0x72,0x6c,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,
    0x31,0x36,0x39,0x2e,0x78,0x20,0x3d,0x20,0x5f,0x31,0x36,0x39,0x2e,0x78,0x20,0x2d,
    0x20,0x76,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x5b,
    0x30,0x5d,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x77,0x6f,
    0x72,0x6c,0x64,0x20,0x3d,0x20,0x5f,0x31,0x36,0x39,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x77,0x6f,0x72,
    0x6c,0x64,0x2e,0x78,0x20,0x3c,0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x31,0x37,0x33,0x20,0x3d,0x20,0x77,0x6f,
    0x72,0x6c,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x5f,0x31,0x37,0x33,0x2e,0x78,0x20,0x3d,0x20,0x5f,0x31,0x37,0x33,0x2e,0x78,
    0x20,0x2b,0x20,0x76,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5f,0x77,0x6f,0x72,0x6c,
    0x64,0x5b,0x30,0x5d,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x77,0x6f,0x72,0x6c,0x64,0x20,0x3d,0x20,0x5f,0x31,0x37,0x33,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x77,0x6f,0x72,0x6c,0x64,0x2e,
    0x79,0x20,0x3e,0x20,0x76,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5f,0x77,0x6f,0x72,
    0x6c,0x64,0x5b,0x30,0x5d,0x2e,0x79,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x31,0x37,0x37,
    0x20,0x3d,0x20,0x77,0x6f,0x72,0x6c,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x5f,0x31,0x37,0x37,0x2e,0x79,0x20,0x3d,0x20,0x5f,0x31,0x37,0x37,0x2e,
    0x79,0x20,0x2d,0x20,0x76,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5f,0x77,0x6f,0x72,
    0x6c,0x64,0x5b,0x30,0x5d,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x77,0x6f,0x72,0x6c,0x64,0x20,0x3d,0x20,0x5f,0x31,0x37,0x37,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,
    0x77,0x6f,0x72,0x6c,0x64,0x2e,0x79,0x20,0x3c,0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x31,0x38,0x31,0x20,0x3d,
    0x20,0x77,0x6f,0x72,0x6c,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x5f,0x31,0x38,0x31,0x2e,0x79,0x20,0x3d,0x20,0x5f,0x31,0x38,
    0x31,0x2e,0x79,0x20,0x2b,0x20,0x76,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5f,0x77,
    0x6f,0x72,0x6c,0x64,0x5b,0x30,0x5d,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x77,0x6f,0x72,0x6c,0x64,0x20,0x3d,0x20,0x5f,
    0x31,0x38,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x66,0x6d,0x61,0x28,
    0x77,0x6f,0x72,0x6c,0x64,0x2e,0x78,0x20,0x2f,0x20,0x76,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x5b,0x30,0x5d,0x2e,0x78,0x2c,0x20,0x32,
    0x2e,0x30,0x2c,0x20,0x2d,0x31,0x2e,0x30,0x29,0x2c,0x20,0x66,0x6d,0x61,0x28,0x77,
    0x6f,0x72,0x6c,0x64,0x2e,0x79,0x20,0x2f,0x20,0x76,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x5b,0x30,0x5d,0x2e,0x79,0x2c,0x20,0x32,0x2e,
    0x30,0x2c,0x20,0x2d,0x31,0x2e,0x30,0x29,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,
    0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 430

    layout(location = 1) in float f_angle;
    layout(location = 0) out vec3 color;
    layout(location = 0) in vec3 f_color;

    void main()
    {
        color = mix(f_color, vec3(abs(sin(f_angle)), abs(sin(f_angle + 2.094394683837890625)), abs(sin(f_angle + 4.18878936767578125))), vec3(0.5));
    }

*/
static const uint8_t simple_fs_source_glsl430[292] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x31,0x29,0x20,0x69,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x5f,0x61,0x6e,
    0x67,0x6c,0x65,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,
    0x63,0x33,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,
    0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,
    0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x6d,0x69,0x78,0x28,0x66,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x61,0x62,0x73,
    0x28,0x73,0x69,0x6e,0x28,0x66,0x5f,0x61,0x6e,0x67,0x6c,0x65,0x29,0x29,0x2c,0x20,
    0x61,0x62,0x73,0x28,0x73,0x69,0x6e,0x28,0x66,0x5f,0x61,0x6e,0x67,0x6c,0x65,0x20,
    0x2b,0x20,0x32,0x2e,0x30,0x39,0x34,0x33,0x39,0x34,0x36,0x38,0x33,0x38,0x33,0x37,
    0x38,0x39,0x30,0x36,0x32,0x35,0x29,0x29,0x2c,0x20,0x61,0x62,0x73,0x28,0x73,0x69,
    0x6e,0x28,0x66,0x5f,0x61,0x6e,0x67,0x6c,0x65,0x20,0x2b,0x20,0x34,0x2e,0x31,0x38,
    0x38,0x37,0x38,0x39,0x33,0x36,0x37,0x36,0x37,0x35,0x37,0x38,0x31,0x32,0x35,0x29,
    0x29,0x29,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x35,0x29,0x29,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x00,
};
/*
    cbuffer v_params_boid : register(b0)
    {
        float2 _18_pos : packoffset(c0);
        float _18_angle : packoffset(c0.z);
        float _18_scale : packoffset(c0.w);
    };

    cbuffer v_params_world : register(b1)
    {
        float2 _80_world_dims : packoffset(c0);
    };


    static float4 gl_Position;
    static float3 f_color;
    static float3 v_color;
    static float f_angle;
    static float2 v_pos;

    struct SPIRV_Cross_Input
    {
        float2 v_pos : TEXCOORD0;
        float3 v_color : TEXCOORD1;
    };

    struct SPIRV_Cross_Output
    {
        float3 f_color : TEXCOORD0;
        float f_angle : TEXCOORD1;
        float4 gl_Position : SV_Position;
    };

    void vert_main()
    {
        f_color = v_color;
        f_angle = _18_angle;
        float2 _32 = v_pos * _18_scale;
        float _38 = _32.x;
        float _41 = cos(_18_angle);
        float _45 = _32.y;
        float _48 = sin(_18_angle);
        float2 _75 = _18_pos + float2(mad(_38, _41, -(_45 * _48)), mad(_38, _48, _45 * _41));
        float2 world = _75;
        if (_75.x > _80_world_dims.x)
        {
            float2 _169 = world;
            _169.x = _169.x - _80_world_dims.x;
            world = _169;
        }
        else
        {
            if (world.x < 0.0f)
            {
                float2 _173 = world;
                _173.x = _173.x + _80_world_dims.x;
                world = _173;
            }
        }
        if (world.y > _80_world_dims.y)
        {
            float2 _177 = world;
            _177.y = _177.y - _80_world_dims.y;
            world = _177;
        }
        else
        {
            if (world.y < 0.0f)
            {
                float2 _181 = world;
                _181.y = _181.y + _80_world_dims.y;
                world = _181;
            }
        }
        gl_Position = float4(mad(world.x / _80_world_dims.x, 2.0f, -1.0f), mad(world.y / _80_world_dims.y, 2.0f, -1.0f), 0.0f, 1.0f);
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        v_color = stage_input.v_color;
        v_pos = stage_input.v_pos;
        vert_main();
        SPIRV_Cross_Output stage_output;
        stage_output.gl_Position = gl_Position;
        stage_output.f_color = f_color;
        stage_output.f_angle = f_angle;
        return stage_output;
    }
*/
static const uint8_t simple_vs_source_hlsl5[2009] = {
    0x63,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x76,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5f,0x62,0x6f,0x69,0x64,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,
    0x28,0x62,0x30,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x32,0x20,0x5f,0x31,0x38,0x5f,0x70,0x6f,0x73,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,
    0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x38,0x5f,0x61,0x6e,0x67,0x6c,0x65,0x20,
    0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x30,0x2e,
    0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,
    0x38,0x5f,0x73,0x63,0x61,0x6c,0x65,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,
    0x66,0x73,0x65,0x74,0x28,0x63,0x30,0x2e,0x77,0x29,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,
    0x63,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x76,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5f,0x77,0x6f,0x72,0x6c,0x64,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,
    0x72,0x28,0x62,0x31,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x32,0x20,0x5f,0x38,0x30,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x64,0x69,0x6d,
    0x73,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,
    0x30,0x29,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,
    0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,
    0x5f,0x61,0x6e,0x67,0x6c,0x65,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x32,0x20,0x76,0x5f,0x70,0x6f,0x73,0x3b,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,
    0x5f,0x49,0x6e,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x32,0x20,0x76,0x5f,0x70,0x6f,0x73,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,
    0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x76,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,
    0x4f,0x4f,0x52,0x44,0x31,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,
    0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,
    0x74,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,
    0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x66,0x5f,0x61,0x6e,0x67,0x6c,0x65,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,
    0x4f,0x52,0x44,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x53,
    0x56,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,
    0x76,0x6f,0x69,0x64,0x20,0x76,0x65,0x72,0x74,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,
    0x20,0x76,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x5f,
    0x61,0x6e,0x67,0x6c,0x65,0x20,0x3d,0x20,0x5f,0x31,0x38,0x5f,0x61,0x6e,0x67,0x6c,
    0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x5f,0x33,
    0x32,0x20,0x3d,0x20,0x76,0x5f,0x70,0x6f,0x73,0x20,0x2a,0x20,0x5f,0x31,0x38,0x5f,
    0x73,0x63,0x61,0x6c,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x33,0x38,0x20,0x3d,0x20,0x5f,0x33,0x32,0x2e,0x78,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x31,0x20,0x3d,0x20,0x63,0x6f,
    0x73,0x28,0x5f,0x31,0x38,0x5f,0x61,0x6e,0x67,0x6c,0x65,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x35,0x20,0x3d,0x20,0x5f,0x33,
    0x32,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x34,0x38,0x20,0x3d,0x20,0x73,0x69,0x6e,0x28,0x5f,0x31,0x38,0x5f,0x61,0x6e,0x67,
    0x6c,0x65,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,
    0x5f,0x37,0x35,0x20,0x3d,0x20,0x5f,0x31,0x38,0x5f,0x70,0x6f,0x73,0x20,0x2b,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x6d,0x61,0x64,0x28,0x5f,0x33,0x38,0x2c,0x20,
    0x5f,0x34,0x31,0x2c,0x20,0x2d,0x28,0x5f,0x34,0x35,0x20,0x2a,0x20,0x5f,0x34,0x38,
    0x29,0x29,0x2c,0x20,0x6d,0x61,0x64,0x28,0x5f,0x33,0x38,0x2c,0x20,0x5f,0x34,0x38,
    0x2c,0x20,0x5f,0x34,0x35,0x20,0x2a,0x20,0x5f,0x34,0x31,0x29,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x77,0x6f,0x72,0x6c,0x64,0x20,
    0x3d,0x20,0x5f,0x37,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,
    0x37,0x35,0x2e,0x78,0x20,0x3e,0x20,0x5f,0x38,0x30,0x5f,0x77,0x6f,0x72,0x6c,0x64,
    0x5f,0x64,0x69,0x6d,0x73,0x2e,0x78,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x5f,0x31,
    0x36,0x39,0x20,0x3d,0x20,0x77,0x6f,0x72,0x6c,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x5f,0x31,0x36,0x39,0x2e,0x78,0x20,0x3d,0x20,0x5f,0x31,0x36,
    0x39,0x2e,0x78,0x20,0x2d,0x20,0x5f,0x38,0x30,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x5f,
    0x64,0x69,0x6d,0x73,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x77,0x6f,0x72,0x6c,0x64,0x20,0x3d,0x20,0x5f,0x31,0x36,0x39,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x77,
    0x6f,0x72,0x6c,0x64,0x2e,0x78,0x20,0x3c,0x20,0x30,0x2e,0x30,0x66,0x29,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x5f,0x31,0x37,0x33,
    0x20,0x3d,0x20,0x77,0x6f,0x72,0x6c,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x31,0x37,0x33,0x2e,0x78,0x20,0x3d,0x20,0x5f,
    0x31,0x37,0x33,0x2e,0x78,0x20,0x2b,0x20,0x5f,0x38,0x30,0x5f,0x77,0x6f,0x72,0x6c,
    0x64,0x5f,0x64,0x69,0x6d,0x73,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x77,0x6f,0x72,0x6c,0x64,0x20,0x3d,0x20,0x5f,0x31,
    0x37,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x77,0x6f,0x72,0x6c,
    0x64,0x2e,0x79,0x20,0x3e,0x20,0x5f,0x38,0x30,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x5f,
    0x64,0x69,0x6d,0x73,0x2e,0x79,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x5f,0x31,0x37,
    0x37,0x20,0x3d,0x20,0x77,0x6f,0x72,0x6c,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x5f,0x31,0x37,0x37,0x2e,0x79,0x20,0x3d,0x20,0x5f,0x31,0x37,0x37,
    0x2e,0x79,0x20,0x2d,0x20,0x5f,0x38,0x30,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x64,
    0x69,0x6d,0x73,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x77,
    0x6f,0x72,0x6c,0x64,0x20,0x3d,0x20,0x5f,0x31,0x37,0x37,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x77,0x6f,
    0x72,0x6c,0x64,0x2e,0x79,0x20,0x3c,0x20,0x30,0x2e,0x30,0x66,0x29,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x5f,0x31,0x38,0x31,0x20,
    0x3d,0x20,0x77,0x6f,0x72,0x6c,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x5f,0x31,0x38,0x31,0x2e,0x79,0x20,0x3d,0x20,0x5f,0x31,
    0x38,0x31,0x2e,0x79,0x20,0x2b,0x20,0x5f,0x38,0x30,0x5f,0x77,0x6f,0x72,0x6c,0x64,
    0x5f,0x64,0x69,0x6d,0x73,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x77,0x6f,0x72,0x6c,0x64,0x20,0x3d,0x20,0x5f,0x31,0x38,
    0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x6d,0x61,0x64,0x28,
    0x77,0x6f,0x72,0x6c,0x64,0x2e,0x78,0x20,0x2f,0x20,0x5f,0x38,0x30,0x5f,0x77,0x6f,
    0x72,0x6c,0x64,0x5f,0x64,0x69,0x6d,0x73,0x2e,0x78,0x2c,0x20,0x32,0x2e,0x30,0x66,
    0x2c,0x20,0x2d,0x31,0x2e,0x30,0x66,0x29,0x2c,0x20,0x6d,0x61,0x64,0x28,0x77,0x6f,
    0x72,0x6c,0x64,0x2e,0x79,0x20,0x2f,0x20,0x5f,0x38,0x30,0x5f,0x77,0x6f,0x72,0x6c,
    0x64,0x5f,0x64,0x69,0x6d,0x73,0x2e,0x79,0x2c,0x20,0x32,0x2e,0x30,0x66,0x2c,0x20,
    0x2d,0x31,0x2e,0x30,0x66,0x29,0x2c,0x20,0x30,0x2e,0x30,0x66,0x2c,0x20,0x31,0x2e,
    0x30,0x66,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,
    0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x28,
    0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,
    0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x73,
    0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x76,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,0x70,0x6f,0x73,0x20,0x3d,0x20,
    0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x76,0x5f,0x70,0x6f,
    0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x72,0x74,0x5f,0x6d,0x61,0x69,0x6e,
    0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,
    0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,
    0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x67,0x6c,0x5f,0x50,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,
    0x75,0x74,0x70,0x75,0x74,0x2e,0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,
    0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,
    0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x66,0x5f,0x61,0x6e,0x67,0x6c,
    0x65,0x20,0x3d,0x20,0x66,0x5f,0x61,0x6e,0x67,0x6c,0x65,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,
    0x74,0x70,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x00,
};
/*
    static float f_angle;
    static float3 color;
    static float3 f_color;

    struct SPIRV_Cross_Input
    {
        float3 f_color : TEXCOORD0;
        float f_angle : TEXCOORD1;
    };

    struct SPIRV_Cross_Output
    {
        float3 color : SV_Target0;
    };

    void frag_main()
    {
        color = lerp(f_color, float3(abs(sin(f_angle)), abs(sin(f_angle + 2.094394683837890625f)), abs(sin(f_angle + 4.18878936767578125f))), 0.5f.xxx);
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        f_angle = stage_input.f_angle;
        f_color = stage_input.f_color;
        frag_main();
        SPIRV_Cross_Output stage_output;
        stage_output.color = color;
        return stage_output;
    }
*/
static const uint8_t simple_fs_source_hlsl5[636] = {
    0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x5f,0x61,
    0x6e,0x67,0x6c,0x65,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,
    0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,
    0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x5f,0x61,0x6e,0x67,0x6c,0x65,0x20,
    0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,0x0a,0x7d,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,
    0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,
    0x53,0x56,0x5f,0x54,0x61,0x72,0x67,0x65,0x74,0x30,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,
    0x76,0x6f,0x69,0x64,0x20,0x66,0x72,0x61,0x67,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x6c,
    0x65,0x72,0x70,0x28,0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x28,0x61,0x62,0x73,0x28,0x73,0x69,0x6e,0x28,0x66,0x5f,0x61,0x6e,
    0x67,0x6c,0x65,0x29,0x29,0x2c,0x20,0x61,0x62,0x73,0x28,0x73,0x69,0x6e,0x28,0x66,
    0x5f,0x61,0x6e,0x67,0x6c,0x65,0x20,0x2b,0x20,0x32,0x2e,0x30,0x39,0x34,0x33,0x39,
    0x34,0x36,0x38,0x33,0x38,0x33,0x37,0x38,0x39,0x30,0x36,0x32,0x35,0x66,0x29,0x29,
    0x2c,0x20,0x61,0x62,0x73,0x28,0x73,0x69,0x6e,0x28,0x66,0x5f,0x61,0x6e,0x67,0x6c,
    0x65,0x20,0x2b,0x20,0x34,0x2e,0x31,0x38,0x38,0x37,0x38,0x39,0x33,0x36,0x37,0x36,
    0x37,0x35,0x37,0x38,0x31,0x32,0x35,0x66,0x29,0x29,0x29,0x2c,0x20,0x30,0x2e,0x35,
    0x66,0x2e,0x78,0x78,0x78,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x53,0x50,0x49,0x52,0x56,
    0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x6d,0x61,
    0x69,0x6e,0x28,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,
    0x6e,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x5f,0x61,0x6e,0x67,0x6c,0x65,0x20,
    0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x66,0x5f,
    0x61,0x6e,0x67,0x6c,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,
    0x2e,0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,
    0x61,0x67,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x53,
    0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,
    0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,
    0x2e,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x00,
};
/*
    diagnostic(off, derivative_uniformity);

    struct v_params_boid {
      /_ @offset(0) _/
      pos : vec2f,
      /_ @offset(8) _/
      angle : f32,
      /_ @offset(12) _/
      scale : f32,
    }

    struct v_params_world {
      /_ @offset(0) _/
      world_dims : vec2f,
    }

    var<private> f_color : vec3f;

    var<private> v_color : vec3f;

    var<private> f_angle : f32;

    @group(0) @binding(0) var<uniform> x_18 : v_params_boid;

    var<private> v_pos : vec2f;

    @group(0) @binding(1) var<uniform> x_80 : v_params_world;

    var<private> gl_Position : vec4f;

    fn main_1() {
      var local : vec2f;
      var rotx : f32;
      var roty : f32;
      var rotated : vec2f;
      var world : vec2f;
      var ndcx : f32;
      var ndcy : f32;
      var ndc : vec2f;
      let x_12 : vec3f = v_color;
      f_color = x_12;
      let x_23 : f32 = x_18.angle;
      f_angle = x_23;
      let x_28 : vec2f = v_pos;
      let x_31 : f32 = x_18.scale;
      local = (x_28 * x_31);
      let x_38 : f32 = local.x;
      let x_40 : f32 = x_18.angle;
      let x_45 : f32 = local.y;
      let x_47 : f32 = x_18.angle;
      rotx = ((x_38 * cos(x_40)) - (x_45 * sin(x_47)));
      let x_53 : f32 = local.x;
      let x_55 : f32 = x_18.angle;
      let x_59 : f32 = local.y;
      let x_61 : f32 = x_18.angle;
      roty = ((x_53 * sin(x_55)) + (x_59 * cos(x_61)));
      let x_66 : f32 = rotx;
      let x_67 : f32 = roty;
      rotated = vec2f(x_66, x_67);
      let x_73 : vec2f = x_18.pos;
      let x_74 : vec2f = rotated;
      world = (x_73 + x_74);
      let x_77 : f32 = world.x;
      let x_82 : f32 = x_80.world_dims.x;
      if ((x_77 > x_82)) {
        let x_88 : f32 = world.x;
        let x_90 : f32 = x_80.world_dims.x;
        world.x = (x_88 - x_90);
      } else {
        let x_95 : f32 = world.x;
        if ((x_95 < 0.0f)) {
          let x_101 : f32 = world.x;
          let x_103 : f32 = x_80.world_dims.x;
          world.x = (x_101 + x_103);
        }
      }
      let x_107 : f32 = world.y;
      let x_109 : f32 = x_80.world_dims.y;
      if ((x_107 > x_109)) {
        let x_114 : f32 = world.y;
        let x_116 : f32 = x_80.world_dims.y;
        world.y = (x_114 - x_116);
      } else {
        let x_121 : f32 = world.y;
        if ((x_121 < 0.0f)) {
          let x_126 : f32 = world.y;
          let x_128 : f32 = x_80.world_dims.y;
          world.y = (x_126 + x_128);
        }
      }
      let x_133 : f32 = world.x;
      let x_135 : f32 = x_80.world_dims.x;
      ndcx = (((x_133 / x_135) * 2.0f) - 1.0f);
      let x_143 : f32 = world.y;
      let x_145 : f32 = x_80.world_dims.y;
      ndcy = (((x_143 / x_145) * 2.0f) - 1.0f);
      let x_150 : f32 = ndcx;
      let x_151 : f32 = ndcy;
      ndc = vec2f(x_150, x_151);
      let x_158 : vec2f = ndc;
      gl_Position = vec4f(x_158.x, x_158.y, 0.0f, 1.0f);
      return;
    }

    struct main_out {
      @location(0)
      f_color_1 : vec3f,
      @location(1)
      f_angle_1 : f32,
      @builtin(position)
      gl_Position : vec4f,
    }

    @vertex
    fn main(@location(1) v_color_param : vec3f, @location(0) v_pos_param : vec2f) -> main_out {
      v_color = v_color_param;
      v_pos = v_pos_param;
      main_1();
      return main_out(f_color, f_angle, gl_Position);
    }

*/
static const uint8_t simple_vs_source_wgsl[2873] = {
    0x64,0x69,0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x28,0x6f,0x66,0x66,0x2c,0x20,
    0x64,0x65,0x72,0x69,0x76,0x61,0x74,0x69,0x76,0x65,0x5f,0x75,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x69,0x74,0x79,0x29,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,
    0x76,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5f,0x62,0x6f,0x69,0x64,0x20,0x7b,0x0a,
    0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x30,0x29,0x20,
    0x2a,0x2f,0x0a,0x20,0x20,0x70,0x6f,0x73,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,
    0x2c,0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x38,
    0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,0x61,0x6e,0x67,0x6c,0x65,0x20,0x3a,0x20,0x66,
    0x33,0x32,0x2c,0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,
    0x28,0x31,0x32,0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,0x73,0x63,0x61,0x6c,0x65,0x20,
    0x3a,0x20,0x66,0x33,0x32,0x2c,0x0a,0x7d,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,
    0x20,0x76,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x20,
    0x7b,0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x30,
    0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x64,0x69,0x6d,
    0x73,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x2c,0x0a,0x7d,0x0a,0x0a,0x76,0x61,
    0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x66,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x0a,0x76,0x61,0x72,
    0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x76,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,
    0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x66,0x5f,0x61,0x6e,0x67,0x6c,0x65,
    0x20,0x3a,0x20,0x66,0x33,0x32,0x3b,0x0a,0x0a,0x40,0x67,0x72,0x6f,0x75,0x70,0x28,
    0x30,0x29,0x20,0x40,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x28,0x30,0x29,0x20,0x76,
    0x61,0x72,0x3c,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x3e,0x20,0x78,0x5f,0x31,0x38,
    0x20,0x3a,0x20,0x76,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5f,0x62,0x6f,0x69,0x64,
    0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,
    0x76,0x5f,0x70,0x6f,0x73,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x3b,0x0a,0x0a,
    0x40,0x67,0x72,0x6f,0x75,0x70,0x28,0x30,0x29,0x20,0x40,0x62,0x69,0x6e,0x64,0x69,
    0x6e,0x67,0x28,0x31,0x29,0x20,0x76,0x61,0x72,0x3c,0x75,0x6e,0x69,0x66,0x6f,0x72,
    0x6d,0x3e,0x20,0x78,0x5f,0x38,0x30,0x20,0x3a,0x20,0x76,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5f,0x77,0x6f,0x72,0x6c,0x64,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,
    0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x3b,0x0a,0x0a,0x66,0x6e,
    0x20,0x6d,0x61,0x69,0x6e,0x5f,0x31,0x28,0x29,0x20,0x7b,0x0a,0x20,0x20,0x76,0x61,
    0x72,0x20,0x6c,0x6f,0x63,0x61,0x6c,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x3b,
    0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x72,0x6f,0x74,0x78,0x20,0x3a,0x20,0x66,0x33,
    0x32,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x72,0x6f,0x74,0x79,0x20,0x3a,0x20,
    0x66,0x33,0x32,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x72,0x6f,0x74,0x61,0x74,
    0x65,0x64,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x3b,0x0a,0x20,0x20,0x76,0x61,
    0x72,0x20,0x77,0x6f,0x72,0x6c,0x64,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x3b,
    0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x6e,0x64,0x63,0x78,0x20,0x3a,0x20,0x66,0x33,
    0x32,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x6e,0x64,0x63,0x79,0x20,0x3a,0x20,
    0x66,0x33,0x32,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x6e,0x64,0x63,0x20,0x3a,
    0x20,0x76,0x65,0x63,0x32,0x66,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,
    0x31,0x32,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,0x76,0x5f,0x63,
    0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,
    0x3d,0x20,0x78,0x5f,0x31,0x32,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,
    0x32,0x33,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x78,0x5f,0x31,0x38,0x2e,
    0x61,0x6e,0x67,0x6c,0x65,0x3b,0x0a,0x20,0x20,0x66,0x5f,0x61,0x6e,0x67,0x6c,0x65,
    0x20,0x3d,0x20,0x78,0x5f,0x32,0x33,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,
    0x5f,0x32,0x38,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x20,0x3d,0x20,0x76,0x5f,
    0x70,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x33,0x31,0x20,
    0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x78,0x5f,0x31,0x38,0x2e,0x73,0x63,0x61,
    0x6c,0x65,0x3b,0x0a,0x20,0x20,0x6c,0x6f,0x63,0x61,0x6c,0x20,0x3d,0x20,0x28,0x78,
    0x5f,0x32,0x38,0x20,0x2a,0x20,0x78,0x5f,0x33,0x31,0x29,0x3b,0x0a,0x20,0x20,0x6c,
    0x65,0x74,0x20,0x78,0x5f,0x33,0x38,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,
    0x6c,0x6f,0x63,0x61,0x6c,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,
    0x5f,0x34,0x30,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x78,0x5f,0x31,0x38,
    0x2e,0x61,0x6e,0x67,0x6c,0x65,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,
    0x34,0x35,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x6c,0x6f,0x63,0x61,0x6c,
    0x2e,0x79,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x34,0x37,0x20,0x3a,
    0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x78,0x5f,0x31,0x38,0x2e,0x61,0x6e,0x67,0x6c,
    0x65,0x3b,0x0a,0x20,0x20,0x72,0x6f,0x74,0x78,0x20,0x3d,0x20,0x28,0x28,0x78,0x5f,
    0x33,0x38,0x20,0x2a,0x20,0x63,0x6f,0x73,0x28,0x78,0x5f,0x34,0x30,0x29,0x29,0x20,
    0x2d,0x20,0x28,0x78,0x5f,0x34,0x35,0x20,0x2a,0x20,0x73,0x69,0x6e,0x28,0x78,0x5f,
    0x34,0x37,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x35,
    0x33,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x6c,0x6f,0x63,0x61,0x6c,0x2e,
    0x78,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x35,0x35,0x20,0x3a,0x20,
    0x66,0x33,0x32,0x20,0x3d,0x20,0x78,0x5f,0x31,0x38,0x2e,0x61,0x6e,0x67,0x6c,0x65,
    0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x35,0x39,0x20,0x3a,0x20,0x66,
    0x33,0x32,0x20,0x3d,0x20,0x6c,0x6f,0x63,0x61,0x6c,0x2e,0x79,0x3b,0x0a,0x20,0x20,
    0x6c,0x65,0x74,0x20,0x78,0x5f,0x36,0x31,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,
    0x20,0x78,0x5f,0x31,0x38,0x2e,0x61,0x6e,0x67,0x6c,0x65,0x3b,0x0a,0x20,0x20,0x72,
    0x6f,0x74,0x79,0x20,0x3d,0x20,0x28,0x28,0x78,0x5f,0x35,0x33,0x20,0x2a,0x20,0x73,
    0x69,0x6e,0x28,0x78,0x5f,0x35,0x35,0x29,0x29,0x20,0x2b,0x20,0x28,0x78,0x5f,0x35,
    0x39,0x20,0x2a,0x20,0x63,0x6f,0x73,0x28,0x78,0x5f,0x36,0x31,0x29,0x29,0x29,0x3b,
    0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x36,0x36,0x20,0x3a,0x20,0x66,0x33,
    0x32,0x20,0x3d,0x20,0x72,0x6f,0x74,0x78,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,
    0x78,0x5f,0x36,0x37,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x72,0x6f,0x74,
    0x79,0x3b,0x0a,0x20,0x20,0x72,0x6f,0x74,0x61,0x74,0x65,0x64,0x20,0x3d,0x20,0x76,
    0x65,0x63,0x32,0x66,0x28,0x78,0x5f,0x36,0x36,0x2c,0x20,0x78,0x5f,0x36,0x37,0x29,
    0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x37,0x33,0x20,0x3a,0x20,0x76,
    0x65,0x63,0x32,0x66,0x20,0x3d,0x20,0x78,0x5f,0x31,0x38,0x2e,0x70,0x6f,0x73,0x3b,
    0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x37,0x34,0x20,0x3a,0x20,0x76,0x65,
    0x63,0x32,0x66,0x20,0x3d,0x20,0x72,0x6f,0x74,0x61,0x74,0x65,0x64,0x3b,0x0a,0x20,
    0x20,0x77,0x6f,0x72,0x6c,0x64,0x20,0x3d,0x20,0x28,0x78,0x5f,0x37,0x33,0x20,0x2b,
    0x20,0x78,0x5f,0x37,0x34,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,
    0x37,0x37,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x77,0x6f,0x72,0x6c,0x64,
    0x2e,0x78,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x38,0x32,0x20,0x3a,
    0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x78,0x5f,0x38,0x30,0x2e,0x77,0x6f,0x72,0x6c,
    0x64,0x5f,0x64,0x69,0x6d,0x73,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x69,0x66,0x20,0x28,
    0x28,0x78,0x5f,0x37,0x37,0x20,0x3e,0x20,0x78,0x5f,0x38,0x32,0x29,0x29,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x38,0x38,0x20,0x3a,0x20,
    0x66,0x33,0x32,0x20,0x3d,0x20,0x77,0x6f,0x72,0x6c,0x64,0x2e,0x78,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x39,0x30,0x20,0x3a,0x20,0x66,0x33,
    0x32,0x20,0x3d,0x20,0x78,0x5f,0x38,0x30,0x2e,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x64,
    0x69,0x6d,0x73,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x77,0x6f,0x72,0x6c,0x64,
    0x2e,0x78,0x20,0x3d,0x20,0x28,0x78,0x5f,0x38,0x38,0x20,0x2d,0x20,0x78,0x5f,0x39,
    0x30,0x29,0x3b,0x0a,0x20,0x20,0x7d,0x20,0x65,0x6c,0x73,0x65,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x39,0x35,0x20,0x3a,0x20,0x66,0x33,
    0x32,0x20,0x3d,0x20,0x77,0x6f,0x72,0x6c,0x64,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x66,0x20,0x28,0x28,0x78,0x5f,0x39,0x35,0x20,0x3c,0x20,0x30,0x2e,0x30,
    0x66,0x29,0x29,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x6c,0x65,0x74,0x20,
    0x78,0x5f,0x31,0x30,0x31,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x77,0x6f,
    0x72,0x6c,0x64,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x6c,0x65,0x74,
    0x20,0x78,0x5f,0x31,0x30,0x33,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x78,
    0x5f,0x38,0x30,0x2e,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x64,0x69,0x6d,0x73,0x2e,0x78,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x77,0x6f,0x72,0x6c,0x64,0x2e,0x78,0x20,
    0x3d,0x20,0x28,0x78,0x5f,0x31,0x30,0x31,0x20,0x2b,0x20,0x78,0x5f,0x31,0x30,0x33,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x7d,0x0a,0x20,0x20,0x6c,
    0x65,0x74,0x20,0x78,0x5f,0x31,0x30,0x37,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,
    0x20,0x77,0x6f,0x72,0x6c,0x64,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,
    0x78,0x5f,0x31,0x30,0x39,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x78,0x5f,
    0x38,0x30,0x2e,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x64,0x69,0x6d,0x73,0x2e,0x79,0x3b,
    0x0a,0x20,0x20,0x69,0x66,0x20,0x28,0x28,0x78,0x5f,0x31,0x30,0x37,0x20,0x3e,0x20,
    0x78,0x5f,0x31,0x30,0x39,0x29,0x29,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x65,
    0x74,0x20,0x78,0x5f,0x31,0x31,0x34,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,
    0x77,0x6f,0x72,0x6c,0x64,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6c,0x65,0x74,
    0x20,0x78,0x5f,0x31,0x31,0x36,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x78,
    0x5f,0x38,0x30,0x2e,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x64,0x69,0x6d,0x73,0x2e,0x79,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x77,0x6f,0x72,0x6c,0x64,0x2e,0x79,0x20,0x3d,0x20,
    0x28,0x78,0x5f,0x31,0x31,0x34,0x20,0x2d,0x20,0x78,0x5f,0x31,0x31,0x36,0x29,0x3b,
    0x0a,0x20,0x20,0x7d,0x20,0x65,0x6c,0x73,0x65,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x32,0x31,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,
    0x3d,0x20,0x77,0x6f,0x72,0x6c,0x64,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x28,0x78,0x5f,0x31,0x32,0x31,0x20,0x3c,0x20,0x30,0x2e,0x30,0x66,
    0x29,0x29,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,
    0x5f,0x31,0x32,0x36,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x77,0x6f,0x72,
    0x6c,0x64,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x6c,0x65,0x74,0x20,
    0x78,0x5f,0x31,0x32,0x38,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x78,0x5f,
    0x38,0x30,0x2e,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x64,0x69,0x6d,0x73,0x2e,0x79,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x77,0x6f,0x72,0x6c,0x64,0x2e,0x79,0x20,0x3d,
    0x20,0x28,0x78,0x5f,0x31,0x32,0x36,0x20,0x2b,0x20,0x78,0x5f,0x31,0x32,0x38,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x7d,0x0a,0x20,0x20,0x6c,0x65,
    0x74,0x20,0x78,0x5f,0x31,0x33,0x33,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,
    0x77,0x6f,0x72,0x6c,0x64,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,
    0x5f,0x31,0x33,0x35,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x78,0x5f,0x38,
    0x30,0x2e,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x64,0x69,0x6d,0x73,0x2e,0x78,0x3b,0x0a,
    0x20,0x20,0x6e,0x64,0x63,0x78,0x20,0x3d,0x20,0x28,0x28,0x28,0x78,0x5f,0x31,0x33,
    0x33,0x20,0x2f,0x20,0x78,0x5f,0x31,0x33,0x35,0x29,0x20,0x2a,0x20,0x32,0x2e,0x30,
    0x66,0x29,0x20,0x2d,0x20,0x31,0x2e,0x30,0x66,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,
    0x74,0x20,0x78,0x5f,0x31,0x34,0x33,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,
    0x77,0x6f,0x72,0x6c,0x64,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,
    0x5f,0x31,0x34,0x35,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x78,0x5f,0x38,
    0x30,0x2e,0x77,0x6f,0x72,0x6c,0x64,0x5f,0x64,0x69,0x6d,0x73,0x2e,0x79,0x3b,0x0a,
    0x20,0x20,0x6e,0x64,0x63,0x79,0x20,0x3d,0x20,0x28,0x28,0x28,0x78,0x5f,0x31,0x34,
    0x33,0x20,0x2f,0x20,0x78,0x5f,0x31,0x34,0x35,0x29,0x20,0x2a,0x20,0x32,0x2e,0x30,
    0x66,0x29,0x20,0x2d,0x20,0x31,0x2e,0x30,0x66,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,
    0x74,0x20,0x78,0x5f,0x31,0x35,0x30,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,
    0x6e,0x64,0x63,0x78,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,0x35,
    0x31,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x6e,0x64,0x63,0x79,0x3b,0x0a,
    0x20,0x20,0x6e,0x64,0x63,0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x66,0x28,0x78,0x5f,
    0x31,0x35,0x30,0x2c,0x20,0x78,0x5f,0x31,0x35,0x31,0x29,0x3b,0x0a,0x20,0x20,0x6c,
    0x65,0x74,0x20,0x78,0x5f,0x31,0x35,0x38,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,
    0x20,0x3d,0x20,0x6e,0x64,0x63,0x3b,0x0a,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x66,0x28,0x78,0x5f,
    0x31,0x35,0x38,0x2e,0x78,0x2c,0x20,0x78,0x5f,0x31,0x35,0x38,0x2e,0x79,0x2c,0x20,
    0x30,0x2e,0x30,0x66,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x3b,0x0a,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x3b,0x0a,0x7d,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,
    0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,0x75,0x74,0x20,0x7b,0x0a,0x20,0x20,0x40,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x30,0x29,0x0a,0x20,0x20,0x66,0x5f,0x63,
    0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x2c,0x0a,
    0x20,0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x31,0x29,0x0a,0x20,
    0x20,0x66,0x5f,0x61,0x6e,0x67,0x6c,0x65,0x5f,0x31,0x20,0x3a,0x20,0x66,0x33,0x32,
    0x2c,0x0a,0x20,0x20,0x40,0x62,0x75,0x69,0x6c,0x74,0x69,0x6e,0x28,0x70,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x29,0x0a,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x2c,0x0a,0x7d,0x0a,
    0x0a,0x40,0x76,0x65,0x72,0x74,0x65,0x78,0x0a,0x66,0x6e,0x20,0x6d,0x61,0x69,0x6e,
    0x28,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x31,0x29,0x20,0x76,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x70,0x61,0x72,0x61,0x6d,0x20,0x3a,0x20,0x76,0x65,
    0x63,0x33,0x66,0x2c,0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x30,
    0x29,0x20,0x76,0x5f,0x70,0x6f,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x20,0x3a,0x20,
    0x76,0x65,0x63,0x32,0x66,0x29,0x20,0x2d,0x3e,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,
    0x75,0x74,0x20,0x7b,0x0a,0x20,0x20,0x76,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,
    0x20,0x76,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x70,0x61,0x72,0x61,0x6d,0x3b,0x0a,
    0x20,0x20,0x76,0x5f,0x70,0x6f,0x73,0x20,0x3d,0x20,0x76,0x5f,0x70,0x6f,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x3b,0x0a,0x20,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x31,0x28,
    0x29,0x3b,0x0a,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6d,0x61,0x69,0x6e,
    0x5f,0x6f,0x75,0x74,0x28,0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x66,0x5f,
    0x61,0x6e,0x67,0x6c,0x65,0x2c,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    diagnostic(off, derivative_uniformity);

    var<private> f_angle : f32;

    var<private> color : vec3f;

    var<private> f_color : vec3f;

    fn main_1() {
      var color_alter : vec3f;
      let x_12 : f32 = f_angle;
      let x_15 : f32 = f_angle;
      let x_20 : f32 = f_angle;
      color_alter = vec3f(abs(sin(x_12)), abs(sin((x_15 + 2.094394683837890625f))), abs(sin((x_20 + 4.18878936767578125f))));
      let x_30 : vec3f = f_color;
      let x_31 : vec3f = color_alter;
      color = mix(x_30, x_31, vec3f(0.5f, 0.5f, 0.5f));
      return;
    }

    struct main_out {
      @location(0)
      color_1 : vec3f,
    }

    @fragment
    fn main(@location(1) f_angle_param : f32, @location(0) f_color_param : vec3f) -> main_out {
      f_angle = f_angle_param;
      f_color = f_color_param;
      main_1();
      return main_out(color);
    }

*/
static const uint8_t simple_fs_source_wgsl[759] = {
    0x64,0x69,0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x28,0x6f,0x66,0x66,0x2c,0x20,
    0x64,0x65,0x72,0x69,0x76,0x61,0x74,0x69,0x76,0x65,0x5f,0x75,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x69,0x74,0x79,0x29,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,
    0x76,0x61,0x74,0x65,0x3e,0x20,0x66,0x5f,0x61,0x6e,0x67,0x6c,0x65,0x20,0x3a,0x20,
    0x66,0x33,0x32,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,
    0x65,0x3e,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,
    0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,
    0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,
    0x0a,0x0a,0x66,0x6e,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x31,0x28,0x29,0x20,0x7b,0x0a,
    0x20,0x20,0x76,0x61,0x72,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x61,0x6c,0x74,0x65,
    0x72,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,
    0x20,0x78,0x5f,0x31,0x32,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x66,0x5f,
    0x61,0x6e,0x67,0x6c,0x65,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x31,
    0x35,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x66,0x5f,0x61,0x6e,0x67,0x6c,
    0x65,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x32,0x30,0x20,0x3a,0x20,
    0x66,0x33,0x32,0x20,0x3d,0x20,0x66,0x5f,0x61,0x6e,0x67,0x6c,0x65,0x3b,0x0a,0x20,
    0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x61,0x6c,0x74,0x65,0x72,0x20,0x3d,0x20,0x76,
    0x65,0x63,0x33,0x66,0x28,0x61,0x62,0x73,0x28,0x73,0x69,0x6e,0x28,0x78,0x5f,0x31,
    0x32,0x29,0x29,0x2c,0x20,0x61,0x62,0x73,0x28,0x73,0x69,0x6e,0x28,0x28,0x78,0x5f,
    0x31,0x35,0x20,0x2b,0x20,0x32,0x2e,0x30,0x39,0x34,0x33,0x39,0x34,0x36,0x38,0x33,
    0x38,0x33,0x37,0x38,0x39,0x30,0x36,0x32,0x35,0x66,0x29,0x29,0x29,0x2c,0x20,0x61,
    0x62,0x73,0x28,0x73,0x69,0x6e,0x28,0x28,0x78,0x5f,0x32,0x30,0x20,0x2b,0x20,0x34,
    0x2e,0x31,0x38,0x38,0x37,0x38,0x39,0x33,0x36,0x37,0x36,0x37,0x35,0x37,0x38,0x31,
    0x32,0x35,0x66,0x29,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,
    0x5f,0x33,0x30,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,0x66,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x33,
    0x31,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,
    0x72,0x5f,0x61,0x6c,0x74,0x65,0x72,0x3b,0x0a,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x3d,0x20,0x6d,0x69,0x78,0x28,0x78,0x5f,0x33,0x30,0x2c,0x20,0x78,0x5f,0x33,
    0x31,0x2c,0x20,0x76,0x65,0x63,0x33,0x66,0x28,0x30,0x2e,0x35,0x66,0x2c,0x20,0x30,
    0x2e,0x35,0x66,0x2c,0x20,0x30,0x2e,0x35,0x66,0x29,0x29,0x3b,0x0a,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x3b,0x0a,0x7d,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,
    0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,0x75,0x74,0x20,0x7b,0x0a,0x20,0x20,0x40,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x30,0x29,0x0a,0x20,0x20,0x63,0x6f,0x6c,
    0x6f,0x72,0x5f,0x31,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x2c,0x0a,0x7d,0x0a,
    0x0a,0x40,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x0a,0x66,0x6e,0x20,0x6d,0x61,
    0x69,0x6e,0x28,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x31,0x29,0x20,
    0x66,0x5f,0x61,0x6e,0x67,0x6c,0x65,0x5f,0x70,0x61,0x72,0x61,0x6d,0x20,0x3a,0x20,
    0x66,0x33,0x32,0x2c,0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x30,
    0x29,0x20,0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x70,0x61,0x72,0x61,0x6d,0x20,
    0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x29,0x20,0x2d,0x3e,0x20,0x6d,0x61,0x69,0x6e,
    0x5f,0x6f,0x75,0x74,0x20,0x7b,0x0a,0x20,0x20,0x66,0x5f,0x61,0x6e,0x67,0x6c,0x65,
    0x20,0x3d,0x20,0x66,0x5f,0x61,0x6e,0x67,0x6c,0x65,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x3b,0x0a,0x20,0x20,0x66,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x70,0x61,0x72,0x61,0x6d,0x3b,0x0a,0x20,0x20,0x6d,
    0x61,0x69,0x6e,0x5f,0x31,0x28,0x29,0x3b,0x0a,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,0x75,0x74,0x28,0x63,0x6f,0x6c,0x6f,0x72,
    0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
static inline const sg_shader_desc* simple_shader_desc(sg_backend backend) {
    if (backend == SG_BACKEND_GLCORE) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)simple_vs_source_glsl430;
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = (const char*)simple_fs_source_glsl430;
            desc.fragment_func.entry = "main";
            desc.attrs[0].glsl_name = "v_pos";
            desc.attrs[1].glsl_name = "v_color";
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 16;
            desc.uniform_blocks[0].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[0].glsl_uniforms[0].array_count = 1;
            desc.uniform_blocks[0].glsl_uniforms[0].glsl_name = "v_params_boid";
            desc.uniform_blocks[1].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[1].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[1].size = 16;
            desc.uniform_blocks[1].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[1].glsl_uniforms[0].array_count = 1;
            desc.uniform_blocks[1].glsl_uniforms[0].glsl_name = "v_params_world";
            desc.label = "simple_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_D3D11) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)simple_vs_source_hlsl5;
            desc.vertex_func.d3d11_target = "vs_5_0";
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = (const char*)simple_fs_source_hlsl5;
            desc.fragment_func.d3d11_target = "ps_5_0";
            desc.fragment_func.entry = "main";
            desc.attrs[0].hlsl_sem_name = "TEXCOORD";
            desc.attrs[0].hlsl_sem_index = 0;
            desc.attrs[1].hlsl_sem_name = "TEXCOORD";
            desc.attrs[1].hlsl_sem_index = 1;
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 16;
            desc.uniform_blocks[0].hlsl_register_b_n = 0;
            desc.uniform_blocks[1].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[1].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[1].size = 16;
            desc.uniform_blocks[1].hlsl_register_b_n = 1;
            desc.label = "simple_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_WGPU) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)simple_vs_source_wgsl;
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = (const char*)simple_fs_source_wgsl;
            desc.fragment_func.entry = "main";
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 16;
            desc.uniform_blocks[0].wgsl_group0_binding_n = 0;
            desc.uniform_blocks[1].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[1].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[1].size = 16;
            desc.uniform_blocks[1].wgsl_group0_binding_n = 1;
            desc.label = "simple_shader";
        }
        return &desc;
    }
    return 0;
}
